diff --git a/username_check.admin.inc b/username_check.admin.inc
index 159c709..405c4f8 100644
--- a/username_check.admin.inc
+++ b/username_check.admin.inc
@@ -11,12 +11,34 @@
 function username_check_settings() {
   $form = array();
 
+
+  $form['username_check_mode'] = array(
+    '#type' => 'radios',
+    '#title' => t('Check for usernames pre-existing in system:'),
+    '#options' => array(
+      'auto'   => t('On - executes when user leaves username field or upon timer end'),
+      'off' => t('Off - No Username checking')),
+    '#default_value' => variable_get('username_check_mode', 'auto'),
+  );
+
+  $form['username_check_mail_mode'] = array(
+    '#type' => 'radios',
+    '#title' => t('Check for E-mail addresses pre-existing in system:'),
+    '#options' => array(
+      'auto'   => t('On - executes when user leaves e-mail field or upon timer end'),
+      'off' => t('Off - No E-mail address checking')),
+    '#default_value' => variable_get('username_check_mail_mode', 'auto'),
+  );
+
   $form['username_check_delay'] = array(
     '#type' => 'textfield',
-    '#title' => t('Timer threshold'),
-    '#description' => t('Threshold in seconds (ex: 0.5, 1).'),
+    '#title' => t('Timer threshold:'),
+    '#description' => t('Threshold in seconds (ex: 0.5, 1) for the check to happen.'),
     '#default_value' => variable_get('username_check_delay', 1),
   );
 
+
+
+
   return system_settings_form($form);
 }
\ No newline at end of file
diff --git a/username_check.css b/username_check.css
index 6b22675..fdd390c 100644
--- a/username_check.css
+++ b/username_check.css
@@ -22,4 +22,61 @@
 
 .username-check-message-rejected {
   color: #FF0000;
+} 
+
+
+
+
+#profile-check-informer {
+  background: url(images/throbber.gif) center top no-repeat;
+  padding-left: 16px;
+}
+.profile-check-informer-progress { 
+  background: url(images/throbber.gif) no-repeat center -20px !important;  
+}
+.profile-check-informer-accepted {
+  background: url(images/accepted.png) no-repeat center center !important; 
+}
+.profile-check-informer-rejected {
+  background: url(images/rejected.png) no-repeat center center !important; 
+}
+
+#profile-check-message {
+  color: #FF0000;
+  font-weight: normal;
+  display: none;
+  margin: 15px 0;
+}
+
+.profile-check-message-rejected {
+  color: #FF0000;
+} 
+
+
+
+
+
+#mail-check-informer {
+  background: url(images/throbber.gif) center top no-repeat;
+  padding-left: 16px;
+}
+.mail-check-informer-progress { 
+  background: url(images/throbber.gif) no-repeat center -20px !important;  
+}
+.mail-check-informer-accepted {
+  background: url(images/accepted.png) no-repeat center center !important; 
+}
+.mail-check-informer-rejected {
+  background: url(images/rejected.png) no-repeat center center !important; 
+}
+
+#mail-check-message {
+  color: #FF0000;
+  font-weight: normal;
+  display: none;
+  margin: 15px 0;
+}
+
+.mail-check-message-rejected {
+  color: #FF0000;
 } 
\ No newline at end of file
diff --git a/username_check.module b/username_check.module
index 29a420a..bd0022f 100644
--- a/username_check.module
+++ b/username_check.module
@@ -17,6 +17,18 @@ function username_check_menu() {
     'access arguments' => array('access content'),
     'file' => 'username_check.unique.inc',
   );
+  $items['username_check/isuniqueprofile'] = array(
+    'type' => MENU_CALLBACK,  
+    'page callback' => 'username_check_profile_callback',
+    'access arguments' => array('access content'),
+    'file' => 'username_check.unique.inc',
+  );
+  $items['username_check/isuniquemail'] = array(   // TODO:  find a way to block use of this by hackers/spammers to search for email addys
+    'type' => MENU_CALLBACK,  
+    'page callback' => 'username_check_mail_callback',
+    'access arguments' => array('access content'),
+    'file' => 'username_check.unique.inc',
+  );
   $items['admin/config/system/username_check'] = array(
     'title' => 'Username check',
     'type' => MENU_NORMAL_ITEM,
@@ -30,16 +42,38 @@ function username_check_menu() {
 }
 
 function username_check_form_user_register_form_alter(&$form) {
-  _username_check_load_resources();
-  
-  $form['account']['name']['#field_suffix'] = '<span id="username-check-informer">&nbsp;</span>';
-  $form['account']['name']['#suffix'] = '<div id="username-check-message"></div>';
+
+  $mode     = variable_get('username_check_mode', 'auto');
+  $mailmode = variable_get('username_check_mail_mode', 'auto');
+
+  if($mode != 'off') {
+    _username_check_load_resources($mode);
+    $form['account']['name']['#field_suffix'] = '<span id="username-check-informer">&nbsp;</span>';
+    $form['account']['name']['#suffix'] = '<div id="username-check-message"></div>';
+  }
+  if($mailmode != 'off') {
+    _username_check_mail_load_resources($mailmode);
+    $form['account']['mail']['#field_suffix'] = '<span id="mail-check-informer">&nbsp;</span>';
+    $form['account']['mail']['#suffix'] = '<div id="mail-check-message"></div>';
+  }
+
+}
+
+
+function username_check_form_user_profile_form_alter(&$form) {
+
+  $mode     = variable_get('username_check_mode', 'auto');
+  if($mode != 'off'){
+    _username_check_profile_load_resources($mode);
+    $form['account']['name']['#field_suffix'] = '<span id="profile-check-informer">&nbsp;</span>';
+    $form['account']['name']['#suffix'] = '<div id="profile-check-message"></div>'; 
+  }
 }
 
 /**
  * Load username_check resources.
  */
-function _username_check_load_resources() {
+function _username_check_load_resources($mode) {
   $module_path = drupal_get_path('module', 'username_check');
   drupal_add_css($module_path . '/username_check.css');
   drupal_add_js($module_path . '/username_check.js');
@@ -50,5 +84,34 @@ function _username_check_load_resources() {
       'delay'   => variable_get('username_check_delay', 1),
     ),
   ), 'setting');
+}
+
+
+function _username_check_profile_load_resources($mode) {
+  $module_path = drupal_get_path('module', 'username_check');
+  drupal_add_css($module_path . '/username_check.css');
+  drupal_add_js($module_path . '/username_check_profile.js');
+
+  drupal_add_js(array(
+    'profileCheck' => array(
+      'ajaxUrl' => url('username_check/isuniqueprofile', array('absolute' => TRUE)),
+      'delay'   => variable_get('username_check_delay', 1),
+    ),
+  ), 'setting');
+}
+
+
+
+function _username_check_mail_load_resources($mode) {
+  $module_path = drupal_get_path('module', 'username_check');
+  drupal_add_css($module_path . '/username_check.css');
+  drupal_add_js($module_path . '/username_check_mail.js');
+
+  drupal_add_js(array(
+    'mailCheck' => array(
+      'ajaxUrl' => url('username_check/isuniquemail', array('absolute' => TRUE)),
+      'delay'   => variable_get('username_check_delay', 1),
+    ),
+  ), 'setting');
   
 }
\ No newline at end of file
diff --git a/username_check.unique.inc b/username_check.unique.inc
index 2901ff5..e1adfe4 100644
--- a/username_check.unique.inc
+++ b/username_check.unique.inc
@@ -30,7 +30,7 @@ function username_check_callback() {
 
       if ($ret) {
         $output['allowed'] = FALSE;
-        $output['msg'] = t('The name %username is already taken.', array('%username' => $username));
+        $output['msg'] = t('The username %username is already taken. If this is you, please ' . l('login,' , 'user') . ' or if you\'ve forgotten your password, ' . l('request a new password','user/password') . '.', array('%username' => $username));
       }
       else {
         $output['allowed'] = TRUE;
@@ -47,3 +47,107 @@ function username_check_callback() {
 function _username_check_is_user_exists($username) {
   return db_query("SELECT COUNT(u.name) count FROM {users} u WHERE LOWER(u.name) = LOWER(:username)", array(':username' => $username))->fetchField();
 }
+
+
+
+
+/**
+ * Main AJAX function: originality check menu callback for user profile 
+ */
+function username_check_profile_callback() {
+  $output = array();
+
+  $username = $_GET['profile'];  
+
+  $ret = user_validate_name($username);
+  if ($ret) {
+    $output['allowed'] = FALSE;
+    $output['msg'] = $ret;
+  }
+  else {
+    $ret = user_is_blocked($username);
+    if ($ret) {
+      $output['allowed'] = FALSE;
+      $output['msg'] = t('The username %username is not allowed.', array('%username' => $username));
+    }
+    else {
+      $username = check_plain($username);
+      // check to see if this username is the current users username
+      $ret = _username_check_is_current_user($username);
+      if ($ret) {
+          $output['allowed'] = TRUE;
+          $output['msg'] = t('The username %username is your username.' , array('%username' => $username));
+      } else {
+
+        $ret = _username_check_is_user_exists($username);
+        if ($ret) {
+          $output['allowed'] = FALSE;
+          $output['msg'] = t('The username %username is already taken.' , array('%username' => $username));
+        }
+        else {
+          $output['allowed'] = TRUE;
+        }
+      }
+    }
+  }
+
+  drupal_json_output($output);
+}
+
+/**
+ * Query user table to check if this is the current user.
+ */
+function _username_check_is_current_user($username) {
+  global $user;
+  return db_query("SELECT COUNT(u.name) count FROM {users} u WHERE LOWER(u.name) = LOWER(:username) AND u.uid =" . $user->uid, array(':username' => $username))->fetchField();
+}
+
+
+
+
+
+
+
+
+
+/**
+ * Main AJAX function: originality check menu callback for email.
+ */
+function username_check_mail_callback() {
+  $output = array();
+
+  $mail = $_GET['mail'];
+
+  $ret = user_validate_mail($mail);
+  if ($ret) {
+    $output['allowed'] = FALSE;
+    $output['msg'] = $ret;
+  }
+  else {
+    $ret = user_is_blocked($mail);
+    if ($ret) {
+      $output['allowed'] = FALSE;
+      $output['msg'] = t('The e-mail address %mail is not allowed.', array('%mail' => $mail));
+    } else {
+      $mail = check_plain($mail);
+      $ret = _username_check_is_mail_exists($mail);
+
+      if ($ret) {
+        $output['allowed'] = FALSE;
+        $output['msg'] = t('The e-mail address %mail is already in the system, you have an account here. Please ' . l('login,' , 'user') . ' or if you\'ve forgotten your password, ' . l('request a new password','user/password') .'.', array('%mail' => $mail));
+      }
+      else {
+        $output['allowed'] = TRUE;
+      }
+    }
+  }
+
+  drupal_json_output($output);
+}
+
+/**
+ * Query user table to check if such mail is already exists.
+ */
+function _username_check_is_mail_exists($mail) {
+  return db_query("SELECT COUNT(u.mail) count FROM {users} u WHERE LOWER(u.mail) = LOWER(:mail)", array(':mail' => $mail))->fetchField();
+}
diff --git a/username_check_mail.js b/username_check_mail.js
new file mode 100644
index 0000000..cf21d3b
--- /dev/null
+++ b/username_check_mail.js
@@ -0,0 +1,75 @@
+
+(function ($) {
+
+Drupal.behaviors.mailCheck = {
+  attach: function (context) {
+    $('#mail-check-informer:not(.mail-check-processed)', context)
+    .each(function() {
+      var input = $(this).parents('.form-item').find('input');
+      
+      Drupal.mailCheck.mail = '';
+      input
+      .keyup(function () {
+        if(input.val() != Drupal.mailCheck.mail) {
+          clearTimeout(Drupal.mailCheck.timer);
+          Drupal.mailCheck.timer = setTimeout(function () {Drupal.mailCheck.check(input)}, parseFloat(Drupal.settings.mailCheck.delay)*1000);
+        
+          if(!$("#mail-check-informer").hasClass('mail-check-informer-progress')) {
+            $("#mail-check-informer")
+              .removeClass('mail-check-informer-accepted')
+              .removeClass('mail-check-informer-rejected');
+          }
+            
+          $("#mail-check-message")
+            .hide();
+        }
+      })
+      .blur(function () {
+        if(input.val() != Drupal.mailCheck.mail) {
+          Drupal.mailCheck.check(input);
+        }
+      });    
+    })
+    .addClass('mail-check-processed'); 
+  }
+};
+
+Drupal.mailCheck = {};
+Drupal.mailCheck.check = function(input) {
+  clearTimeout(Drupal.mailCheck.timer);
+  Drupal.mailCheck.mail = input.val();
+  
+  $.ajax({
+    url: Drupal.settings.mailCheck.ajaxUrl,
+    data: {mail: Drupal.mailCheck.mail},
+    dataType: 'json',
+    beforeSend: function() {
+      $("#mail-check-informer")
+        .removeClass('mail-check-informer-accepted')
+        .removeClass('mail-check-informer-rejected')
+        .addClass('mail-check-informer-progress');
+    },
+    success: function(ret){
+      if(ret['allowed']){
+        $("#mail-check-informer")
+          .removeClass('mail-check-informer-progress')
+          .addClass('mail-check-informer-accepted');
+        
+        input
+          .removeClass('error');
+      }
+      else {
+        $("#mail-check-informer")
+          .removeClass('mail-check-informer-progress')
+          .addClass('mail-check-informer-rejected');
+        
+        $("#mail-check-message")
+          .addClass('mail-check-message-rejected')
+          .html(ret['msg'])
+          .show();
+      }
+    }
+   });
+}
+
+})(jQuery); 
diff --git a/username_check_profile.js b/username_check_profile.js
new file mode 100644
index 0000000..903354f
--- /dev/null
+++ b/username_check_profile.js
@@ -0,0 +1,75 @@
+
+(function ($) {
+
+Drupal.behaviors.profileCheck = {
+  attach: function (context) {
+    $('#profile-check-informer:not(.profile-check-processed)', context)
+    .each(function() {
+      var input = $(this).parents('.form-item').find('input');
+      
+      Drupal.profileCheck.profile = '';
+      input
+      .keyup(function () {
+        if(input.val() != Drupal.profileCheck.profile) {
+          clearTimeout(Drupal.profileCheck.timer);
+          Drupal.profileCheck.timer = setTimeout(function () {Drupal.profileCheck.check(input)}, parseFloat(Drupal.settings.profileCheck.delay)*1000);
+        
+          if(!$("#profile-check-informer").hasClass('profile-check-informer-progress')) {
+            $("#profile-check-informer")
+              .removeClass('profile-check-informer-accepted')
+              .removeClass('profile-check-informer-rejected');
+          }
+            
+          $("#profile-check-message")
+            .hide();
+        }
+      })
+      .blur(function () {
+        if(input.val() != Drupal.profileCheck.profile) {
+          Drupal.profileCheck.check(input);
+        }
+      });    
+    })
+    .addClass('profile-check-processed'); 
+  }
+};
+
+Drupal.profileCheck = {};
+Drupal.profileCheck.check = function(input) {
+  clearTimeout(Drupal.profileCheck.timer);
+  Drupal.profileCheck.profile = input.val();
+  
+  $.ajax({
+    url: Drupal.settings.profileCheck.ajaxUrl,
+    data: {profile: Drupal.profileCheck.profile},
+    dataType: 'json',
+    beforeSend: function() {
+      $("#profile-check-informer")
+        .removeClass('profile-check-informer-accepted')
+        .removeClass('profile-check-informer-rejected')
+        .addClass('profile-check-informer-progress');
+    },
+    success: function(ret){
+      if(ret['allowed']){
+        $("#profile-check-informer")
+          .removeClass('profile-check-informer-progress')
+          .addClass('profile-check-informer-accepted');
+        
+        input
+          .removeClass('error');
+      }
+      else {
+        $("#profile-check-informer")
+          .removeClass('profile-check-informer-progress')
+          .addClass('profile-check-informer-rejected');
+        
+        $("#profile-check-message")
+          .addClass('profile-check-message-rejected')
+          .html(ret['msg'])
+          .show();
+      }
+    }
+   });
+}
+
+})(jQuery); 
